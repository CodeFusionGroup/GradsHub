apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services' // Needed for firebase
apply plugin: 'androidx.navigation.safeargs'


android {
    compileSdkVersion = 29
    buildToolsVersion = "29.0.0"

    defaultConfig {
        applicationId "com.codefusiongroup.gradshub"
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }

    compileOptions {
        targetCompatibility = 1.8
        sourceCompatibility = 1.8
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
}

//coveralls {
//    jacocoReportPath 'build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml'
//}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {
    reports {
        xml.enabled = true
        html.enabled = true
    }
   // def fileFilter = ['**/R.class', '**/R$*.class','**/BuildConfig.*', '**/Manifest*.*','**/Test*.*', 'android/**/*.*']
   // def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
   // def mainSrc = "${project.projectDir}/src/main/java"
   // sourceDirectories = files([mainSrc])
   // classDirectories.setFrom(classDirectories.files.collect {fileTree([debugTree])
   // executionData = fileTree(dir:"$buildDir", includes:[
  //          "jacoco/testDebugUnitTest.exec",
  //          "outputs/code-coverage/connected/*coverage.ec"
   // ])
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    testImplementation 'org.mockito:mockito-core:2.8.47'
    androidTestImplementation 'androidx.navigation:navigation-testing:2.3.0'
    debugImplementation ('androidx.fragment:fragment-testing:1.2.5') {exclude group:'org.jetbrains.kotlin'}
    implementation 'androidx.navigation:navigation-fragment:2.3.0'
    implementation 'androidx.navigation:navigation-ui:2.3.0'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    //noinspection GradleDependency
    androidTestImplementation "com.android.support:support-annotations:27.1.1"

    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'

    androidTestImplementation 'com.21buttons:fragment-test-rule:2.0.1'
    debugImplementation 'com.21buttons:fragment-test-rule-extras:2.0.1'
    implementation 'androidx.navigation:navigation-runtime:2.3.0'

    //apply plugin: 'org.sonarqube'
    apply plugin: 'jacoco'

    // volley for network requests
    implementation 'com.android.volley:volley:1.1.1'

    // retrofit for network requests (for mvp)
    implementation 'com.squareup.retrofit2:retrofit:2.1.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'

    // jsoup for web scraping
    implementation 'org.jsoup:jsoup:1.13.1'

    // Firebase Storage
    implementation 'com.google.firebase:firebase-storage:19.1.1'

}
